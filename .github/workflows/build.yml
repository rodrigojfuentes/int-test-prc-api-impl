# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release Mule Application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ## Build properties
      ANYPOINT_PLATFORM_CONNECTED_APP_CLIENT_ID: ${{ secrets.ANYPOINT_PLATFORM_CONNECTED_APP_CLIENT_ID }}
      ANYPOINT_PLATFORM_CONNECTED_APP_CLIENT_SECRET: ${{ secrets.ANYPOINT_PLATFORM_CONNECTED_APP_CLIENT_SECRET }}

      ## Deployment properties
      M2_HOME: /home/runner/.m2
      
    ## --- Notes ---
    # To Skip MUnit Tests: Add -DskipMunitTests to the run command at the bottom
    # How to reference a GitHub Secret: ${{ secrets.SECRET_NAME }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: maven-settings-xml-action
      uses: whelk-io/maven-settings-xml-action@v21
      with:
        repositories: '[{ "id": "mulesoft-releases", "url": "https://repository.mulesoft.org/releases/" }]'
        plugin_repositories: '[{ "id": "mulesoft-releases", "url": "https://repository.mulesoft.org/releases/" }]'
        servers: '[{ "id": "anypoint-exchange-v3", "username": "~~~Client~~~", "password": "${ANYPOINT_PLATFORM_CONNECTED_APP_CLIENT_ID}~?~${ANYPOINT_PLATFORM_CONNECTED_APP_CLIENT_SECRET}" },
          { "id": "Repository", "username": "~~~Client~~~", "password": "${ANYPOINT_PLATFORM_CONNECTED_APP_CLIENT_ID}~?~${ANYPOINT_PLATFORM_CONNECTED_APP_CLIENT_SECRET}" }]'
    - name: Set user info
      run: |
        git config --global user.email "rodrigojfuentes@gmail.com"
        git config --global user.name "Rodrigo Fuentes"
    - name: Release Prepare
      run: |
        mvn release:prepare -s $M2_HOME/settings.xml \
          --batch-mode \
          -D=scmCommentPrefix="[skip ci] " \
          -Darguments=-DskipTests
    - name: Release Perform
      run: |
        mvn release:perform -s $M2_HOME/settings.xml \
          --batch-mode \
          -DGitRepositoryUrl=${{ github.event.repository.name }} \
          -DlocalCheckout=true \
          -D=scmCommentPrefix="[skip ci] " \
          -Darguments=-DskipTests